openapi: 3.0.0
info:
  title: AMTS GTFS static data FDP
  description: FDP API for interacting with AMTS GTFS static datasets.
  version: 1.0.0
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'

security:
  - bearerAuth: []
paths:
  /routes:
    get:
      x-teadal-policies:
        description: placeholder (TODO fixme)
        policies:
        - roles:
            value:
            - Admin
        - roles:
            value:
            - Generic_User
            timeliness:
              value:
              - min: 10
                unit_of_measure: minutes
        - roles:
            value:
            - Federated_User
      summary: Retrieve all rows from the routes dataset.
      operationId: getRoutes
      x-router-controller: routes
      description: |
        Returns all the routes available in the dataset.
      responses:
        '200':
          description: A list of all rows in the routes dataset.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Route'
  /routes/{route_id}:
    get:
      x-teadal-policies:
        description: placeholder (TODO fixme)
        policies:
        - roles:
            value:
            - Admin
        - roles:
            value:
            - Federated_User
      summary: Retrieve a specific row from the routes dataset based on route_id.
      operationId: getRouteById
      x-router-controller: routes
      description: Returns the details of a specific route using its unique identifier.
      parameters:
        - name: route_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Details of the specified row.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Route'
  /trips:
    get:
      x-teadal-policies:
        description: placeholder (TODO fixme)
        policies:
        - roles:
            value:
            - Admin
        - roles:
            value:
            - Generic_User
            timeliness:
              value:
              - min: 10
                unit_of_measure: minutes
        - roles:
            value:
            - Federated_User
      summary: Retrieve all rows from the trips dataset.
      operationId: getTrips
      x-router-controller: trips
      description: |
        Returns all the trips available in the dataset.
      responses:
        '200':
          description: A list of all rows in the trips dataset.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Trip'
  /trips/{trip_id}:
    get:
      x-teadal-policies:
        description: placeholder (TODO fixme)
        policies:
        - roles:
            value:
            - Admin
        - roles:
            value:
            - Federated_User
      summary: Retrieve a specific row from the trips dataset based on trip_id.
      operationId: getTripById
      x-router-controller: trips
      description: Returns the details of a specific trip using its unique identifier.
      parameters:
        - name: trip_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Details of the specified row.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Trip'
  /trips/route/{route_id}:
    get:
      x-teadal-policies:
        description: placeholder (TODO fixme)
        policies:
        - roles:
            value:
            - Admin
        - roles:
            value:
            - Federated_User
      summary: Retrieve the trips of a specific route from the trips dataset based
        on route_id.
      operationId: getTripsByRouteId
      x-router-controller: trips
      description: Returns the details of all trips of a specific route using its unique identifier.
      parameters:
        - name: route_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Details of the specified row.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Trip'
  /trips/service/{service_id}:
    get:
      x-teadal-policies:
        description: placeholder (TODO fixme)
        policies:
        - roles:
            value:
            - Admin
        - roles:
            value:
            - Federated_User
      summary: Retrieve the trips of a specific service from the trips dataset based
        on service_id.
      operationId: getTripsByServiceId
      x-router-controller: trips
      description: Returns the details of all trips of a specific service using its unique identifier.
      parameters:
        - name: service_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Details of the specified row.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Trip'
  /calendar:
    get:
      x-teadal-policies:
        description: placeholder (TODO fixme)
        policies:
        - roles:
            value:
            - Admin
        - roles:
            value:
            - Generic_User
            timeliness:
              value:
              - min: 10
                unit_of_measure: minutes
        - roles:
            value:
            - Federated_User
      summary: Retrieve all rows from the calendar dataset.
      operationId: getCalendars
      x-router-controller: calendar
      description: |
        Returns all calendar entries available in the dataset.
      responses:
        '200':
          description: A list of all rows in the calendar dataset.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Calendar'
  /calendar/{service_id}:
    get:
      x-teadal-policies:
        description: placeholder (TODO fixme)
        policies:
        - roles:
            value:
            - Admin
        - roles:
            value:
            - Federated_User
      summary: Retrieve a specific row from the calendar dataset based on service_id.
      operationId: getCalendarById
      x-router-controller: calendar
      description: Returns the details of a specific calendar entry using its unique identifier.
      parameters:
        - name: service_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Details of the specified row.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Calendar'
  /agency:
    get:
      x-teadal-policies:
        description: placeholder (TODO fixme)
        policies:
        - roles:
            value:
            - Admin
        - roles:
            value:
            - Generic_User
            timeliness:
              value:
              - min: 10
                unit_of_measure: minutes
        - roles:
            value:
            - Federated_User
      summary: Retrieve all rows from the agency dataset.
      operationId: getAgencies
      x-router-controller: agency
      description: |
        Returns all agency entries available in the dataset.
      responses:
        '200':
          description: A list of all rows in the agency dataset.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Agency'
  /agency/{agency_id}:
    get:
      x-teadal-policies:
        description: placeholder (TODO fixme)
        policies:
        - roles:
            value:
            - Admin
        - roles:
            value:
            - Federated_User
      summary: Retrieve a specific row from the agency dataset based on agency_id.
      operationId: getAgencyById
      x-router-controller: agency
      description: Returns the details of a specific agency entry using its unique identifier.
      parameters:
        - name: agency_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Details of the specified row.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Agency'
  /shapes:
    get:
      x-teadal-policies:
        description: placeholder (TODO fixme)
        policies:
        - roles:
            value:
            - Admin
        - roles:
            value:
            - Generic_User
            timeliness:
              value:
              - min: 10
                unit_of_measure: minutes
        - roles:
            value:
            - Federated_User
      summary: Retrieve all rows from the shapes dataset.
      operationId: getShapes
      x-router-controller: shapes
      description: |
        Returns all shape entries available in the dataset.
      responses:
        '200':
          description: A list of all rows in the shapes dataset.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Shape'
  /shapes/{shape_id}:
    get:
      x-teadal-policies:
        description: placeholder (TODO fixme)
        policies:
        - roles:
            value:
            - Admin
        - roles:
            value:
            - Federated_User
      summary: Retrieve a specific row from the shapes dataset based on shape_id.
      operationId: getShapeById
      x-router-controller: shapes
      description: Returns the details of a specific shape entry using its unique identifier.
      parameters:
        - name: shape_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Details of the specified row.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Shape'
  /stops:
    get:
      x-teadal-policies:
        description: placeholder (TODO fixme)
        policies:
        - roles:
            value:
            - Admin
        - roles:
            value:
            - Generic_User
            timeliness:
              value:
              - min: 10
                unit_of_measure: minutes
        - roles:
            value:
            - Federated_User
      summary: Retrieve all rows from the stops dataset.
      operationId: getStops
      x-router-controller: stops
      description: |
        Returns all stop entries available in the dataset.
      responses:
        '200':
          description: A list of all rows in the stops dataset.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Stop'
  /stops/{stop_id}:
    get:
      x-teadal-policies:
        description: placeholder (TODO fixme)
        policies:
        - roles:
            value:
            - Admin
        - roles:
            value:
            - Federated_User
      summary: Retrieve a specific row from the stops dataset based on trip_id.
      operationId: getStopById
      x-router-controller: stops
      description: Returns the details of a specific stop entry using its unique stop identifier.
      parameters:
        - name: stop_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Details of the specified row.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Stop'
  /stop_times:
    get:
      x-teadal-policies:
        description: placeholder (TODO fixme)
        policies:
        - roles:
            value:
            - Admin
        - roles:
            value:
            - Generic_User
            timeliness:
              value:
              - min: 10
                unit_of_measure: minutes
        - roles:
            value:
            - Federated_User
      summary: Retrieve all rows from the stop_times dataset.
      operationId: getStopTimes
      x-router-controller: stoptimes
      description: |
        Returns all stop time entries available in the dataset.
      responses:
        '200':
          description: A list of all rows in the stop_times dataset.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StopTime'
  /stop_times/{trip_id}:
    get:
      x-teadal-policies:
        description: placeholder (TODO fixme)
        policies:
        - roles:
            value:
            - Admin
        - roles:
            value:
            - Federated_User
      summary: Retrieve a specific row from the stop_times dataset based on trip_id.
      operationId: getStopTimeByTripId
      x-router-controller: stoptimes
      description: Returns the details of a specific stop time entry using its unique trip_id identifier.
      parameters:
        - name: trip_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Details of the specified row.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StopTime'
components:
  securitySchemes:
    bearerAuth: # arbitrary name for the security scheme
      type: http
      scheme: bearer
      x-teadal-IAM-provider: http://baseline.teadal.ubiwhere.eu/realms/master/.well-known/openid-configuration

  schemas:
    Route:
      type: object
      properties:
        route_id:
          type: string
        agency_id:
          type: string
        route_short_name:
          type: string
        route_long_name:
          type: string
        route_type:
          type: integer
    Trip:
      type: object
      properties:
        route_id:
          type: string
        service_id:
          type: string
        trip_id:
          type: string
        trip_headsign:
          type: string
        direction_id:
          type: string
        shape_id:
          type: string
    Calendar:
      type: object
      properties:
        service_id:
          type: string
        sunday:
          type: integer
        monday:
          type: integer
        tuesday:
          type: integer
        wednesday:
          type: integer
        thursday:
          type: integer
        friday:
          type: integer
        saturday:
          type: integer
        start_date:
          type: string
        end_date:
          type: string
    Agency:
      type: object
      properties:
        agency_id:
          type: string
        agency_name:
          type: string
        agency_url:
          type: string
        agency_timezone:
          type: string
        agency_lang:
          type: string
        agency_phone:
          type: string
        agency_fare_url:
          type: string
        agency_email:
          type: string
    Stop:
      type: object
      properties:
        stop_id:
          type: string
        stop_code:
          type: string
        stop_name:
          type: string
        stop_desc:
          type: string
        stop_lat:
          type: number
          format: float
        stop_lon:
          type: number
          format: float
        zone_id:
          type: string
        stop_url:
          type: string
        location_type:
          type: string
        parent_station:
          type: string
        stop_timezone:
          type: string
        wheelchair_boarding:
          type: string
    Shape:
      type: object
      properties:
        shape_id:
          type: string
        shape_pt_lat:
          type: number
          format: float
        shape_pt_lon:
          type: number
          format: float
        shape_pt_sequence:
          type: integer
        shape_dist_traveled:
          type: string
    StopTime:
      type: object
      properties:
        trip_id:
          type: string
        arrival_time:
          type: string
        departure_time:
          type: string
        stop_id:
          type: string
        stop_sequence:
          type: integer
        stop_headsign:
          type: string
        pickup_type:
          type: string
        drop_off_type:
          type: string
        shape_dist_traveled:
          type: string
        timepoint:
          type: string
