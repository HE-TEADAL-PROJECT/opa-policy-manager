openapi: 3.0.0

info:
  title: TEADAL - Evidence based medicine - Node 01
  version: 1.0.0
  description: "TEADAL FDP MEDICINE NODE 01 Rest API."
  termsOfService: https://www.teadal.eu/about-teadal/
  contact:
    name: Ribera Salud TEADAL API Support
    email: not@defined
    url: www.riberasalud.com
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0

servers:
  - url: http://medicine01.teadal.ubiwhere.com/fdp-medicine-node01 
    description: Production server (uses live data)

tags:
  - name: service
    description: Checks availability of the Teadal node.

  - name: drug_exposure
    description:  Provides information about the utilization of a drug when ingested or otherwise introduced into the body.

  - name: measurement
    description: Provides information about orders and results of laboratory tests, vital signs, quantitative findings from pathology reports, etc

  - name: observation
    description: Provides information about clinical facts regarding a person obtained in the context of examination, questioning or a procedure.

  - name: person
    description: Provides information about records that uniquely identify each patient in the source data who is time at-risk to have clinical observations recorded within the source systems.

  - name: procedure_occurrence
    description: Provides information about activities or processes ordered by, or carried out by, a healthcare provider on the patient to have a diagnostic or therapeutic purpose.

  - name: condition_occurrence
    description: Provides information about records of a person suggesting the presence of a disease or medical condition stated as a diagnosis, a sign or a symptom, which is either observed by a Provider or reported by the patient.
security:
- bearerAuth: []
paths:
  x-teadal-policies:
    description: Only the medic Anita Yanez can access.
    access-policies:
      - user:
          value:
          - y_anita@proton.me

#  SERVICE ---------------------------------------------------------------------------------------------------------------------------------
  /:
    get:
      tags:
        - service
      summary: Checks availability and redirections if any
      operationId: root
      description: Confirms availability with a message
      responses:
        '200':
          description: Accepted
          content:
            application/json:
              schema:
                type: string
        '301':
          $ref: '#/components/responses/301'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '5XX':
          $ref: '#/components/responses/5XX'

#  DRUG_EXPOSURE ----------------------------------------------------------------------------------------------------------------------
  /drug_exposures:
    get:
      tags:
        - drug_exposure
      summary: Request for all drug exposures
      operationId: GetDrugExposuresAll
      description: The whole 'DrugExposure' dataset will be returned. No parameters are needed.
      responses:
        '200':
          description: Accepted
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DrugExposure'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '5XX':
          $ref: '#/components/responses/5XX'

  /drug_exposures/{drug_exposure_id}:
    get:
      tags:
        - drug_exposure
      summary: Request for a specific drug exposure
      operationId: GetDrugExposureById
      description: The drug exposure specified by 'drug_exposure_id' will be returned. Parameter 'drug_exposure_id' is mandatory.
      parameters:
        - in: path
          name: drug_exposure_id
          required: true
          schema:
            type : integer
      responses:
        '200':
          description: Accepted
          content:
            application/json:
              schema:
                type: object
                properties:
                  type:
                    $ref: '#/components/schemas/DrugExposure'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '5XX':
          $ref: '#/components/responses/5XX'

  /drug_exposures/person/{person_id}:
    get:
      tags:
        - drug_exposure
      summary: Request a drug exposure related to a person
      operationId: GetDrugExposureByPersonId
      description: The drug exposure related to a person specified by 'person_id' will be returned. Parameter 'person_id' is mandatory.
      parameters:
        - in: path
          name: person_id
          required: true
          schema:
            type : integer
      responses:
        '200':
          description: Accepted
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DrugExposure'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '5XX':
          $ref: '#/components/responses/5XX'

#  MEASUREMENT ------------------------------------------------------------------------------------------------------------------------
  /AllmeasurementsAsync:
    get:
      tags:
        - measurement
      summary: Request for all measurements
      operationId: GetMeasurementsAll
      description: The whole 'Measurement' dataset will be returned. No parameters are needed.
      responses:
        '200':
          description: Accepted
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Measurement'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '5XX':
          $ref: '#/components/responses/5XX'

  /measurements/{measurement_id}:
    get:
      tags:
        - measurement
      summary: Request for a specific measurement
      operationId: GetMeasurementById
      description: The measurement specified by 'measurement_id' will be returned. Parameter 'measurement_id' is mandatory.
      parameters:
        - in: path
          name: measurement_id
          required: true
          schema:
            type : integer
      responses:
        '200':
          description: Accepted
          content:
            application/json:
              schema:
                type: object
                properties:
                  type:
                    $ref: '#/components/schemas/Measurement'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '5XX':
          $ref: '#/components/responses/5XX'

  /Measurements_byPersonAsync/{person_id}:
    get:
      tags:
        - measurement
      summary: Request for measurements related to a specific person
      operationId: GetMeasurementByPersonId
      description: The measurements related to the person specified by 'person_id' will be returned. Parameter 'person_id' is mandatory.
      parameters:
        - in: path
          name: person_id
          required: true
          schema:
            type : integer
      responses:
        '200':
          description: Accepted
          content:
            application/json:
              schema:
                type: object
                properties:
                  type:
                    $ref: '#/components/schemas/Measurement'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '5XX':
          $ref: '#/components/responses/5XX'


  /measurementAsync/queue:
    get:
      tags:
        - measurement
      summary: Request for a the position in que queue of measurement queries
      operationId: GetMeasurementQUeuePosition
      description: The header properties "X-user" and "X-rol" will provide position queue.
      parameters:
        - in: header
          name: X-user
          required: true
          schema:
            type : string
        - in: header
          name: X-rol
          required: true
          schema:
            type : string            
      responses:
        '200':
          description: Accepted
          content:
            application/json:
              schema:
                type: integer
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '5XX':
          $ref: '#/components/responses/5XX'
#  OBSERVATION  -----------------------------------------------------------------------------------------------------------------------
  /observations:
    get:
      tags:
        - observation
      summary: Request for all observations
      operationId: GetObservationsAll
      description: The whole 'Observation' dataset will be returned. No parameters are needed.
      responses:
        '200':
          description: Accepted
          content:
            application/json:
              schema:
                type: array
                items:
                    $ref: '#/components/schemas/Observation'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '5XX':
          $ref: '#/components/responses/5XX'

  /observations/{observation_id}:
    get:
      tags:
        - observation
      summary: Request for a specific observation
      operationId: GetObservationById
      description: The person specified by 'observation_id' will be returned. Parameter 'observation_id' is mandatory.
      parameters:
        - in: path
          name: observation_id
          required: true
          schema:
            type : integer
      responses:
        '200':
          description: Accepted
          content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Observation'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '5XX':
          $ref: '#/components/responses/5XX'

#  PERSON -----------------------------------------------------------------------------------------------------------------------------
  /AllPersonAsync:
    get:
      tags:
        - person
      summary: Request for all persons
      operationId: GetPersonsAll
      description: The whole 'Person' dataset will be returned. No parameters are needed.
      responses:
        '200':
          description: Accepted
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Person'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '5XX':
          $ref: '#/components/responses/5XX'

  /persons/age/{age}:
    get:
      tags:
        - person
      summary: Request for all persons that are {age} years old
      operationId: GetPersonsByAge
      description: A list of 'Person' objects that are {age} years old will be returned. No parameters are needed.
      parameters:
        - in: path
          name: age
          required: true
          schema:
            type : integer
      responses:
        '200':
          description: Accepted
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Person'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '5XX':
          $ref: '#/components/responses/5XX'

  /persons/age/up/{age}:
    get:
      tags:
        - person
      summary: Request for all persons older than {age} years
      operationId: GetPersonsUpAge
      description: A list of 'Person' objects older than {age} years will be returned. No parameters are needed.
      parameters:
        - in: path
          name: age
          required: true
          schema:
            type : integer
      responses:
        '200':
          description: Accepted
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Person'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '5XX':
          $ref: '#/components/responses/5XX'

  /persons/age/low/{age}:
    get:
      tags:
        - person
      summary: Request for all persons
      operationId: GetPersonsLowAge
      description: A list of 'Person' objects younger than {age} years will be returned. No parameters are needed.
      parameters:
        - in: path
          name: age
          required: true
          schema:
            type : integer
      responses:
        '200':
          description: Accepted
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Person'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '5XX':
          $ref: '#/components/responses/5XX'

  /OnePersonAsync/{person_id}:
    get:
      tags:
        - person
      summary: Request for a specific person
      operationId: GetPersonById
      description: The person specified by 'person_id' will be returned. Parameter 'person_id' is mandatory.
      parameters:
        - in: path
          name: person_id
          required: true
          schema:
            type : integer
      responses:
        '200':
          description: Accepted
          content:
            application/json:
              schema:
                type: object
                properties:
                  type:
                    $ref: '#/components/schemas/Person'
          links:
            GetDrugExposuresByPersonId:
              operationId: GetDrugExposuresByPersonId
              parameters:
                person_id: '$response.body#/person_id'
              description: >
                The `person_id` value returned in the response can be used as
                the `person_id` parameter in `GET /drug_exposures/person/{person_id}/`.
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '5XX':
          $ref: '#/components/responses/5XX'

  /personAsync/queue:
    get:
      tags:
        - person
      summary: Request for a the position in que queue of perosn queries
      operationId: GetPersonQueuePosition
      description: The header properties "X-user" and "X-rol" will provide position queue.
      parameters:
        - in: header
          name: X-user
          required: true
          schema:
            type : string
        - in: header
          name: X-rol
          required: true
          schema:
            type : string            
      responses:
        '200':
          description: Accepted
          content:
            application/json:
              schema:
                type: integer
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '5XX':
          $ref: '#/components/responses/5XX'

#  PROCEDURE OCCURRENCE ---------------------------------------------------------------------------------------------------------------
  /procedure_occurrences:
    get:
      tags:
        - procedure_occurrence
      summary: Request for all procedure occurrences
      operationId: GetProcedureOccurrencesAll
      description: The whole 'Procedure_Occurrences' dataset will be returned. No parameters are needed.
      responses:
        '200':
          description: Accepted
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcedureOccurrence'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '5XX':
          $ref: '#/components/responses/5XX'

  /procedure_occurrences/{procedure_occurrence_id}:
    get:
      tags:
        - procedure_occurrence
      summary: Request for a specific procedure occurrence
      operationId: GetProcedureOccurrenceById
      description: The procedure occurrence specified by 'procedure_occurrence_id' will be returned. Parameter 'procedure_occurrence_id' is mandatory.
      parameters:
        - in: path
          name: procedure_occurrence_id
          required: true
          schema:
            type : integer
      responses:
        '200':
          description: Accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProcedureOccurrence'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '5XX':
          $ref: '#/components/responses/5XX'

#  CONDITION OCCURRENCE ---------------------------------------------------------------------------------------------------------------
  /condition_occurrences:
    get:
      tags:
        - condition_occurrences
      summary: Request for all condition occurrences
      operationId: GetConditionOccurrencesAll
      description: The whole 'condition_occurrences' dataset will be returned. No parameters are needed.
      responses:
        '200':
          description: Accepted
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ConditionOccurrence'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '5XX':
          $ref: '#/components/responses/5XX'

  /condition_occurrences/{condition_occurrence_id}:
    get:
      tags:
        - condition_occurrence
      summary: Request for a specific condition occurrence
      operationId: GetConditionOccurrenceById
      description: The condition occurrence specified by 'condition_occurrence_id' will be returned. Parameter 'condition_occurrence_id' is mandatory.
      parameters:
        - in: path
          name: condition_occurrence_id
          required: true
          schema:
            type : integer
      responses:
        '200':
          description: Accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConditionOccurrence'
        '202':
          $ref: '#/components/responses/202'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '5XX':
          $ref: '#/components/responses/5XX'

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      x-teadal-IAM-provider: http://baseline.teadal.ubiwhere.eu/realms/master/.well-known/openid-configuration
  schemas:
    Person:
      type: object
      properties:
        person_id:
          type: integer
        gender_concept_id:
          type: integer
        year_of_birth:
          type: integer
        month_of_birth:
          type: integer
          nullable: true
        day_of_birth:
          type: integer
          nullable: true
        birth_datetime:
          type: string
          format: date-time
          nullable: true
        race_concept_id:
          type: integer
        ethnicity_concept_id:
          type: integer
        location_id:
          type: integer
          nullable: true
        provider_id:
          type: integer
          nullable: true
        care_site_id:
          type: integer
          nullable: true
        person_source_value:
          type: string
          maxLength: 50
          nullable: true
        gender_source_value:
          type: string
          maxLength: 50
          nullable: true
        gender_source_concept_id:
          type: integer
          nullable: true
        race_source_value:
          type: string
          maxLength: 50
          nullable: true
        race_source_concept_id:
          type: integer
          nullable: true
        ethnicity_source_value:
          type: string
          maxLength: 50
          nullable: true
        ethnicity_source_concept_id:
          type: integer
          nullable: true

    Observation:
      type: object
      properties:
        observation_id:
          type: integer
        person_id:
          type: integer
        observation_concept_id:
          type: integer
        observation_date:
          type: string
          format: date
        observation_datetime:
          type: string
          format: date-time
          nullable: true
        observation_type_concept_id:
          type: integer
        value_as_number:
          type: number
          format: float
          nullable: true
        value_as_string:
          type: string
          maxLength: 60
          nullable: true
        value_as_concept_id:
          type: integer
          nullable: true
        qualifier_concept_id:
          type: integer
          nullable: true
        unit_concept_id:
          type: integer
          nullable: true
        provider_id:
          type: integer
          nullable: true
        visit_occurrence_id:
          type: integer
          nullable: true
        visit_detail_id:
          type: integer
          nullable: true
        observation_source_value:
          type: string
          maxLength: 50
          nullable: true
        observation_source_concept_id:
          type: integer
          nullable: true
        unit_source_value:
          type: string
          maxLength: 50
          nullable: true
        qualifier_source_value:
          type: string
          maxLength: 50
          nullable: true
        value_source_value:
          type: string
          maxLength: 50
          nullable: true
        observation_event_id:
          type: integer
          nullable: true
        obs_event_field_concept_id:
          type: integer
          nullable: true

    DrugExposure:
      type: object
      properties:
        drug_exposure_id:
          type: integer
        person_id:
          type: integer
        drug_concept_id:
          type: integer
        drug_exposure_start_date:
          type: string
          format: date
        drug_exposure_start_datetime:
          type: string
          format: date-time
          nullable: true
        drug_exposure_end_date:
          type: string
          format: date
        drug_exposure_end_datetime:
          type: string
          format: date-time
          nullable: true
        verbatim_end_date:
          type: string
          format: date
          nullable: true
        drug_type_concept_id:
          type: integer
        stop_reason:
          type: string
          maxLength: 20
          nullable: true
        refills:
          type: integer
          nullable: true
        quantity:
          type: number
          format: float
          nullable: true
        days_supply:
          type: integer
          nullable: true
        sig:
          type: string
          nullable: true
        route_concept_id:
          type: integer
          nullable: true
        lot_number:
          type: string
          maxLength: 50
          nullable: true
        provider_id:
          type: integer
          nullable: true
        visit_occurrence_id:
          type: integer
          nullable: true
        visit_detail_id:
          type: integer
          nullable: true
        drug_source_value:
          type: string
          maxLength: 50
          nullable: true
        drug_source_concept_id:
          type: integer
          nullable: true
        route_source_value:
          type: string
          maxLength: 50
          nullable: true
        dose_unit_source_value:
          type: string
          maxLength: 50
          nullable: true

    ProcedureOccurrence:
      type: object
      properties:
        procedure_occurrence_id:
          type: integer
        person_id:
          type: integer
        procedure_concept_id:
          type: integer
        procedure_date:
          type: string
          format: date
        procedure_datetime:
          type: string
          format: date-time
          nullable: true
        procedure_end_date:
          type: string
          format: date
          nullable: true
        procedure_end_datetime:
          type: string
          format: date-time
          nullable: true
        procedure_type_concept_id:
          type: integer
        modifier_concept_id:
          type: integer
          nullable: true
        quantity:
          type: integer
          nullable: true
        provider_id:
          type: integer
          nullable: true
        visit_occurrence_id:
          type: integer
          nullable: true
        visit_detail_id:
          type: integer
          nullable: true
        procedure_source_value:
          type: string
          maxLength: 50
          nullable: true
        procedure_source_concept_id:
          type: integer
          nullable: true
        modifier_source_value:
          type: string
          maxLength: 50
          nullable: true

    ConditionOccurrence:
      type: object
      properties:
        condition_occurrence_id:
          type: integer
        person_id:
          type: integer
        condition_concept_id:
          type: integer
        condition_start_date:
          type: string
          format: date
        condition_start_datetime:
          type: string
          format: date-time
          nullable: true
        condition_end_date:
          type: string
          format: date
          nullable: true
        condition_end_datetime:
          type: string
          format: date-time
          nullable: true
        condition_type_concept_id:
          type: integer
        condition_status_concept_id:
          type: integer
          nullable: true
        stop_reason:
          type: string
          maxLength: 20
          nullable: true
        provider_id:
          type: integer
          nullable: true
        visit_occurrence_id:
          type: integer
          nullable: true
        visit_detail_id:
          type: integer
          nullable: true
        condition_source_value:
          type: string
          maxLength: 50
          nullable: true
        condition_source_concept_id:
          type: integer
          nullable: true
        condition_status_source_value:
          type: string
          maxLength: 50
          nullable: true

    Measurement:
      type: object
      properties:
        measurement_id:
          type: integer
        person_id:
          type: integer
        measurement_concept_id:
          type: integer
        measurement_date:
          type: string
          format: date
        measurement_datetime:
          type: string
          format: date-time
          nullable: true
        measurement_time:
          type: string
          maxLength: 10
          nullable: true
        measurement_type_concept_id:
          type: integer
        operator_concept_id:
          type: integer
          nullable: true
        value_as_number:
          type: number
          format: float
          nullable: true
        value_as_concept_id:
          type: integer
          nullable: true
        unit_concept_id:
          type: integer
          nullable: true
        range_low:
          type: number
          format: float
          nullable: true
        range_high:
          type: number
          format: float
          nullable: true
        provider_id:
          type: integer
          nullable: true
        visit_occurrence_id:
          type: integer
          nullable: true
        visit_detail_id:
          type: integer
          nullable: true
        measurement_source_value:
          type: string
          maxLength: 50
          nullable: true
        measurement_source_concept_id:
          type: integer
          nullable: true
        unit_source_value:
          type: string
          maxLength: 50
          nullable: true
        value_source_value:
          type: string
          maxLength: 50
          nullable: true

  responses:
    200:
      description: OK
    202:
      description: Request accepted but not completed.
    204:
      description: No content.
    301:
      description: Resource moved permanently. Redirecting...
    400:
      description: Bad request.
    401:
      description: Authorization information is missing or invalid.
    404:
      description: The specified resource was not found.
    5XX:
      description: Unexpected error.
